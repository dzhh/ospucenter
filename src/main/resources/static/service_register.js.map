{"version":3,"sources":["webpack:///./app/pages/service/service_register.js"],"names":["FormItem","Item","service_register","state","props","config","loginResponse","create","onFieldsChange","items","context","handleReset","form","resetFields","confirmDirty","handleSubmit","bind","e","preventDefault","validateFieldsAndScroll","err","values","console","log","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","marginLeft","width","rules","required","message","marginRight"],"mappings":"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","file":"service_register.js","sourcesContent":["/**\r\n * Created by kwx on 2017/9/22.\r\n */\r\n\r\n\r\nimport React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { hashHistory } from 'react-router'\r\nimport {Card,Checkbox,Select, Spin, message, Form, Icon, Input, Button, Row, Col } from 'antd'\r\nimport '../../style/base.less'\r\nconst FormItem = Form.Item\r\n\r\n//连接 Redux 的组件 不可复用\r\n@connect(\r\n    (state, props) => ({\r\n        config: state.config,\r\n        loginResponse: state.loginResponse,\r\n    })\r\n)\r\n//测试为 在每输入一个字符时调用\r\n@Form.create({\r\n    onFieldsChange(props, items) {\r\n        // console.log(items)\r\n        // props.cacheSearch(items);\r\n    },\r\n})\r\n\r\nexport default class service_register extends Component {\r\n    // 初始化页面常量 绑定事件方法\r\n    constructor(props, context) {\r\n        super(props)\r\n        this.state = {\r\n            confirmDirty: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n    handleReset = () => {\r\n        this.props.form.resetFields();\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                // const user = {};\r\n                // user.userName = values.userName\r\n                // user.userEmail = values.userEmail\r\n                // user.userPwd = values.password\r\n                // fetchRegister(user, (res) => {\r\n                //     if (res.ospState == 200) {\r\n                //         message.success(\"注册成功\", 2, ()=>{ hashHistory.push('/login')})\r\n                //     } else  {\r\n                //         message.error(res.data.msg)\r\n                //         this.setState({\r\n                //             loading: false\r\n                //         })\r\n                //     }\r\n                // })\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 14 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 14,\r\n                    offset: 6,\r\n                },\r\n            },\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <div  className=\"pageStyle\" >\r\n                <Card title=\"服务注册\" bordered={false} className=\"cardStyle\">\r\n                    <Form onSubmit={this.handleSubmit} style={{marginLeft:'18%',width:'60%'}}>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"接口地址\"\r\n                            hasFeedback\r\n                        >\r\n                            {getFieldDecorator('interfaceAddress', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true, message: '请输入接口地址!'\r\n                                    },\r\n                                    // { pattern: \"[A-Za-z0-9]{5,8}\", message: '接口地址只能为5-8位字符或数字' }\r\n                                    ],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"请求方法\"\r\n                            hasFeedback\r\n                        >\r\n                            {getFieldDecorator('requestMethod', {\r\n                                rules: [{\r\n                                    required: true, message: '请输入请求方法!',\r\n                                 },\r\n                                ],\r\n                            })(\r\n                                <Input  />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"请求参数（header）:\"\r\n                        >\r\n                            {/*<span className=\"ant-form-text\">China</span>*/}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"参数名\"\r\n                        >\r\n                            {getFieldDecorator('header_paramName', {\r\n                                rules: [{ required: true, message: '请输入你的参数名!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"类型\"\r\n                        >\r\n                            {getFieldDecorator('header_type', {\r\n                                rules: [{ required: true, message: '请输入类型!' }],\r\n                            })(\r\n                                <Input  />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"参数位置\"\r\n                        >\r\n                            {getFieldDecorator('header_paramAddress', {\r\n                                rules: [{ required: true, message: '请输入参数位置!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                        {...formItemLayout}\r\n                        label=\"描述\"\r\n                    >\r\n                        {getFieldDecorator('header_describe', {\r\n                            rules: [{ required: true, message: '请输入描述!' }],\r\n                        })(\r\n                            <Input />\r\n                        )}\r\n                    </FormItem>\r\n\r\n\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"请求参数(urlParam)\"\r\n\r\n                        >\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"参数名\"\r\n                        >\r\n                            {getFieldDecorator('urlParam_paramName', {\r\n                                rules: [{ required: true, message: '请输入你的参数名!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"类型\"\r\n                        >\r\n                            {getFieldDecorator('urlParam_type', {\r\n                                rules: [{ required: true, message: '请输入类型!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"参数位置\"\r\n                        >\r\n                            {getFieldDecorator('urlParam_paramAddress', {\r\n                                rules: [{ required: true, message: '请输入参数位置!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"描述\"\r\n                        >\r\n                            {getFieldDecorator('urlParam_describe', {\r\n                                rules: [{ required: true, message: '请输入描述!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n\r\n\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"错误码参照\"\r\n                        >\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"错误码\"\r\n                        >\r\n                            {getFieldDecorator('errorCode', {\r\n                                rules: [{ required: true, message: '请输入错误码!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"错误码返回\"\r\n                        >\r\n                            {getFieldDecorator('errorCodeReturn', {\r\n                                rules: [{ required: true, message: '请输入错误码返回!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"错误码返回说明\"\r\n                        >\r\n                            {getFieldDecorator('errorCodeReturnIns', {\r\n                                rules: [{ required: true, message: '请输入错误码返回说明!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            {...formItemLayout}\r\n                            label=\"描述\"\r\n                        >\r\n                            {getFieldDecorator('error_describe', {\r\n                                rules: [{ required: true, message: '请输入描述!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </FormItem>\r\n\r\n                        <FormItem {...tailFormItemLayout}>\r\n                            <Button style={{ marginRight: 8 }} onClick={this.handleReset}>\r\n                                重置\r\n                            </Button>\r\n                            <Button type=\"primary\" htmlType=\"submit\" size=\"large\">注册</Button>\r\n\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/pages/service/service_register.js"],"sourceRoot":""}